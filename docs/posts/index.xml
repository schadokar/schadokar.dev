<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Shubham Chadokar</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Shubham Chadokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://schadokar.dev&#34;&gt;Shubham Chadokar&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Wed, 14 Apr 2021 19:33:42 +0530</lastBuildDate>
    
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a Weather App in Html</title>
      <link>/posts/create-a-weather-app-in-html/</link>
      <pubDate>Wed, 14 Apr 2021 19:33:42 +0530</pubDate>
      
      <guid>/posts/create-a-weather-app-in-html/</guid>
      <description>In this post, we are creating a weather app in html using material and openweathermap api.
The final app will look like this.
The code is available on GitHub.
Openweathermap API Go to Openweathermap.org and create an account. We are utilizing free tier api.
In free tier, we can call 60 calls/minute 1,000,000 calls/month.
Checkout the available APIs for free tier.
Login to your account and go to My API Keys from the top-right menu.</description>
      
    </item>
    
    <item>
      <title>Flashback 2020</title>
      <link>/posts/flashback-2020/</link>
      <pubDate>Fri, 01 Jan 2021 12:41:41 +0530</pubDate>
      
      <guid>/posts/flashback-2020/</guid>
      <description>Finally, an another year ends with lots of memory and lost days. Unlike many years, this year was an exception.
A deadly virus come out of China, may be one of the deadliest of the century. With this single event all the perceptions of life has changed.
Not going in that. Lets starts.
 Like all the new year, in 2020 I also made few resolutions. Gym, join some salsa classes, have at least 4-5 trips, dubai expo 2020, reunion with few friends, 50 articles and a few more which I don&#39;t remember.</description>
      
    </item>
    
    <item>
      <title>Basic validations every nodejs developer should know</title>
      <link>/posts/basic-validations-every-nodejs-developer-should-know/</link>
      <pubDate>Sun, 06 Sep 2020 11:51:52 +0530</pubDate>
      
      <guid>/posts/basic-validations-every-nodejs-developer-should-know/</guid>
      <description>Validations are the key things to prevent the application&#39;s unexpected behaviour. This is a list of basic validations every nodejs developer should know about.
I will keep updating this article with new validation and best approaches.
 typeof operator  Syntax   Number check  Check NaN (not a number) Check if the number is finite   String Check Boolean Check Undefined Check Null Check  Null check using the Object   Function check Object Check  Check using the instanceof   Array Check Buffer Check Conclusion  typeof operator Javascript provides a typeof operator.</description>
      
    </item>
    
    <item>
      <title>Create a Serverless Application in Golang With AWS</title>
      <link>/posts/create-a-serverless-application-in-golang-with-aws/</link>
      <pubDate>Mon, 10 Aug 2020 23:19:26 +0530</pubDate>
      
      <guid>/posts/create-a-serverless-application-in-golang-with-aws/</guid>
      <description>In this tutorial, we are going to create a golang serverless application and deploy it to the AWS cloud.
Table of Content
 Prerequisites Getting Started  Open hello/main.go Open serverless.yml   Build the application  Build   Deploy Test the application Conclusion  Prerequisites  Serverless Installed AWS account Connect AWS account to serverless  All these are covered in detail in the last tutorial.
Getting Started Create a new directory hello-go-serverless.</description>
      
    </item>
    
    <item>
      <title>Create your first Serverless application</title>
      <link>/posts/create-your-first-serverless-application/</link>
      <pubDate>Sun, 09 Aug 2020 16:04:50 +0530</pubDate>
      
      <guid>/posts/create-your-first-serverless-application/</guid>
      <description>Serverless computing is a cloud computing execution model in which the cloud provider runs the server, and dynamically manages the allocation of machine resources. Pricing is based on the actual amount of resources consumed by an application, rather than on pre-purchased units of capacity. - Wikipedia
In simple language, serverless means pay only for what you use. You might think there is already a Pay-as-you-go model provided by the cloud providers.</description>
      
    </item>
    
    <item>
      <title>Secure Your Api Using Jwt in Golang</title>
      <link>/posts/secure-your-api-using-jwt-in-golang/</link>
      <pubDate>Thu, 30 Jul 2020 11:17:11 +0530</pubDate>
      
      <guid>/posts/secure-your-api-using-jwt-in-golang/</guid>
      <description>In this tutorial, we will learn how to secure the APIs using the JWT authentication in Golang.
In any application, APIs are the bridge between two services. These services can be anything, like a backend service or a frontend service.
To secure the application, bridge security is important.
JWT is a JSON web token. In which, a token is generated by 1 service and shared with another service. Whenever the 2nd service make a request to the 1st service, it will send the token with the request.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Nodejs with Expressjs</title>
      <link>/posts/how-to-send-email-in-nodejs-with-expressjs/</link>
      <pubDate>Sun, 26 Jul 2020 09:21:13 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-nodejs-with-expressjs/</guid>
      <description>This is the 2nd part of the How to send email in Nodejs series. In the last section, we created the function to send the email using node cli.
In this section, we will use the Expressjs and expose the functionality as an API. To test the api, we&#39;re going to use 2 options Curl command and Postman.
Series:  How to Send Email in Nodejs - Part 1 How to Send Email in Nodejs with Expressjs - Part 2  Pre-requisite  Node.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Nodejs</title>
      <link>/posts/how-to-send-email-in-nodejs/</link>
      <pubDate>Sun, 19 Jul 2020 18:16:06 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-nodejs/</guid>
      <description>This is a series of articles on how to send an email in nodejs.
In the first article, we will send an email using the node command. Later, we will create a APIs and a frontend.
Sending emails in nodejs have only 2 requirements:
 Mail service provider (For ex. Gmail, Sendinblue, Mailchimp) Middleware to connect with mail service (For ex. nodemailer)  Series:  How to Send Email in Nodejs - Part 1 How to Send Email in Nodejs with Expressjs - Part 2  Prerequisites  Node.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Golang</title>
      <link>/posts/how-to-send-email-in-golang/</link>
      <pubDate>Thu, 11 Jun 2020 11:07:11 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-golang/</guid>
      <description>This is a series of tutorials: sending email in golang. We&#39;ll first start with the basic sending an email using the go command.
In the upcoming tutorials, we will create an API and a frontend using which we will send emails.
In this tutorial, we will send an email using the main.go file.
Pre-requisites  go v1.11 or greater - I am using go1.14.3 Code Editor (VSCode, Atom) - I am using VS Code Sendinblue account - link   Check out this step by step tutorial Create an account in sendinblue.</description>
      
    </item>
    
    <item>
      <title>Json in Golang</title>
      <link>/posts/json-in-golang/</link>
      <pubDate>Mon, 23 Mar 2020 11:23:56 +0530</pubDate>
      
      <guid>/posts/json-in-golang/</guid>
      <description>When you start a project which interacts with the outer world, it requires data exchange. To make a project successful this interaction must be simple and efficient.
What is Data Exchange?  Data exchange is the process of taking data structured under a source schema and transforming it into data structured under a target schema, so that the target data is an accurate representation of the source data. - Wikipedia</description>
      
    </item>
    
    <item>
      <title>Understand Quicksort the easy way</title>
      <link>/posts/understand-quicksort-the-easy-way/</link>
      <pubDate>Thu, 13 Feb 2020 23:25:31 +0530</pubDate>
      
      <guid>/posts/understand-quicksort-the-easy-way/</guid>
      <description>Photo by IÃ±aki del Olmo on Unsplash
Data structures and Algorithms are the key skills for a software developer. Recently when I was preparing for a job change, learning sorting algorithms was not smooth.
The theory is simple and straight but its implementation is just the opposite.
 I think concept and implementation are inversely proportional. ðŸ¤”
 There are many sorting algorithms like bubblesort, mergesort, quicksort etc. Among all, quicksort is one of the most popular sorting algorithms.</description>
      
    </item>
    
  </channel>
</rss>
