<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>strings on Shubham Chadokar</title>
    <link>/tags/strings/</link>
    <description>Recent content in strings on Shubham Chadokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://schadokar.dev&#34;&gt;Shubham Chadokar&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Fri, 27 Mar 2020 11:55:03 +0530</lastBuildDate>
    
        <atom:link href="/tags/strings/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compare Strings in Golang</title>
      <link>/to-the-point/compare-strings-in-golang/</link>
      <pubDate>Fri, 27 Mar 2020 11:55:03 +0530</pubDate>
      
      <guid>/to-the-point/compare-strings-in-golang/</guid>
      <description>A string value is a sequence of bytes.
Using the Comparison operators == equal != not equal &amp;lt; less &amp;lt;= less or equal &amp;gt; greater &amp;gt;= greater or equal To check if strings are equal or not, you can use == or !=.
1package main 2 3import ( 4	&amp;#34;fmt&amp;#34; 5) 6 7func main() { 8 9	str1 := &amp;#34;golang&amp;#34; 10	str2 := &amp;#34;gopher&amp;#34; 11 12	fmt.Println(str1 == str2) 13	fmt.</description>
      
    </item>
    
    <item>
      <title>How to Join Strings in Golang?</title>
      <link>/to-the-point/how-to-join-strings-in-golang/</link>
      <pubDate>Thu, 27 Feb 2020 19:46:51 +0530</pubDate>
      
      <guid>/to-the-point/how-to-join-strings-in-golang/</guid>
      <description>There are multiple ways to join or concat strings in the golang.
Let&#39;s start with the easy one.
Using the + operator ðŸ”§ 1package main 2 3import ( 4	&amp;#34;fmt&amp;#34; 5) 6 7func main() { 8	str1 := &amp;#34;Hello&amp;#34; 9	// there is a space before World 10	str2 := &amp;#34; World!&amp;#34; 11 12	fmt.Println(str1 + str2) 13} Output
1Hello World!  Using Sprint, Sprintf, Sprintln ðŸ›  The fmt package has Sprint, Sprintf and Sprintln function which can format the strings using the default or custom formats.</description>
      
    </item>
    
  </channel>
</rss>
