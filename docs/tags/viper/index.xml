<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>viper on Shubham Chadokar</title>
    <link>https://schadokar.dev/tags/viper/</link>
    <description>Recent content in viper on Shubham Chadokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/schadokar&#34;&gt;Shubham Chadokar&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Sun, 12 Jan 2020 18:14:49 +0530</lastBuildDate>
    
	<atom:link href="https://schadokar.dev/tags/viper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Environment Variable in your next Golang Project</title>
      <link>https://schadokar.dev/posts/go-env-ways/</link>
      <pubDate>Sun, 12 Jan 2020 18:14:49 +0530</pubDate>
      
      <guid>https://schadokar.dev/posts/go-env-ways/</guid>
      <description>Photo by Moja Msanii on Unsplash When it comes to creating a production-grade application, using the environment variable in the application is de facto.
Why should we use the environment variable? Suppose you have an application with many features and each feature need to access the Database. You configured all the DB information like DBURL, DBNAME, USERNAME and PASSWORD in each feature.
There are a few major disadvantages to this approach, there can be many.</description>
    </item>
    
  </channel>
</rss>