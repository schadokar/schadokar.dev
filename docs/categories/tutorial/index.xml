<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tutorial on Shubham Chadokar</title>
    <link>/categories/tutorial/</link>
    <description>Recent content in Tutorial on Shubham Chadokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://schadokar.dev&#34;&gt;Shubham Chadokar&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Fri, 16 Apr 2021 15:49:50 +0530</lastBuildDate>
    
        <atom:link href="/categories/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create a Task List in Html</title>
      <link>/posts/create-a-task-list-in-html/</link>
      <pubDate>Fri, 16 Apr 2021 15:49:50 +0530</pubDate>
      
      <guid>/posts/create-a-task-list-in-html/</guid>
      <description>In this post, we are building a task list in HTML using material css.
The tasks will save in the browser local storage.
In the end, the app can be hosted on GitHub Pages.
The code is available on GitHub.
Demo App
The final app will look like this.
Project Setup Create a html-task-list directory.
1|- html-task-list 2	|- icons 3	|- index.html 4	|- style.css 5	|- tasks.js index.html Create a index.</description>
      
    </item>
    
    <item>
      <title>Create a Weather App in Html</title>
      <link>/posts/create-a-weather-app-in-html/</link>
      <pubDate>Wed, 14 Apr 2021 19:33:42 +0530</pubDate>
      
      <guid>/posts/create-a-weather-app-in-html/</guid>
      <description>In this post, we are creating a weather app in html using material and openweathermap api.
The final app will look like this.
The code is available on GitHub.
Openweathermap API Go to Openweathermap.org and create an account. We are utilizing free tier api.
In free tier, we can call 60 calls/minute 1,000,000 calls/month.
Checkout the available APIs for free tier.
Login to your account and go to My API Keys from the top-right menu.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Nodejs with Expressjs</title>
      <link>/posts/how-to-send-email-in-nodejs-with-expressjs/</link>
      <pubDate>Sun, 26 Jul 2020 09:21:13 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-nodejs-with-expressjs/</guid>
      <description>This is the 2nd part of the How to send email in Nodejs series. In the last section, we created the function to send the email using node cli.
In this section, we will use the Expressjs and expose the functionality as an API. To test the api, we&#39;re going to use 2 options Curl command and Postman.
Series:  How to Send Email in Nodejs - Part 1 How to Send Email in Nodejs with Expressjs - Part 2  Pre-requisite  Node.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Nodejs</title>
      <link>/posts/how-to-send-email-in-nodejs/</link>
      <pubDate>Sun, 19 Jul 2020 18:16:06 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-nodejs/</guid>
      <description>This is a series of articles on how to send an email in nodejs.
In the first article, we will send an email using the node command. Later, we will create a APIs and a frontend.
Sending emails in nodejs have only 2 requirements:
 Mail service provider (For ex. Gmail, Sendinblue, Mailchimp) Middleware to connect with mail service (For ex. nodemailer)  Series:  How to Send Email in Nodejs - Part 1 How to Send Email in Nodejs with Expressjs - Part 2  Prerequisites  Node.</description>
      
    </item>
    
    <item>
      <title>Convert Byte to Hex and Hex to Byte in Golang</title>
      <link>/to-the-point/convert-byte-to-hex-and-hex-to-byte-in-golang/</link>
      <pubDate>Sat, 18 Jul 2020 13:33:52 +0530</pubDate>
      
      <guid>/to-the-point/convert-byte-to-hex-and-hex-to-byte-in-golang/</guid>
      <description>In this post of to-the-point series, we will convert a hex string to a byte array and vice-versa. For this, we&#39;re going to use the encoding/hex package provided by the golang. Package hex implements hexadecimal encoding and decoding.
byte array to hex string To convert a byte array to hex string, we will encode the byte array to the hexadecimal string.
Syntax 1func EncodeToString(src []byte) string First we will convert a string to a byte array.</description>
      
    </item>
    
    <item>
      <title>Create an Account in Sendinblue</title>
      <link>/to-the-point/create-an-account-in-sendinblue/</link>
      <pubDate>Sat, 20 Jun 2020 17:43:00 +0530</pubDate>
      
      <guid>/to-the-point/create-an-account-in-sendinblue/</guid>
      <description>Sendinblue is a SaaS solution for relationship marketing. It offers a cloud-based marketing communication software suite with email marketing, transactional email, marketing automation, customer-relationship management, landing pages, Facebook ads, retargeting ads, SMS marketing, and more.
Sendinblue offers 300 mails per day for free account. ðŸ˜ƒ
Getting started There are only 3 easy steps to create an account in Sendinblue.
Step 1 Click on the below Get started link. It will redirect you to the signup page.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Golang</title>
      <link>/posts/how-to-send-email-in-golang/</link>
      <pubDate>Thu, 11 Jun 2020 11:07:11 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-golang/</guid>
      <description>This is a series of tutorials: sending email in golang. We&#39;ll first start with the basic sending an email using the go command.
In the upcoming tutorials, we will create an API and a frontend using which we will send emails.
In this tutorial, we will send an email using the main.go file.
Pre-requisites  go v1.11 or greater - I am using go1.14.3 Code Editor (VSCode, Atom) - I am using VS Code Sendinblue account - link   Check out this step by step tutorial Create an account in sendinblue.</description>
      
    </item>
    
    <item>
      <title>How to Login as Root in GCP Linux Vm</title>
      <link>/to-the-point/how-to-login-as-root-in-gcp-linux-vm/</link>
      <pubDate>Mon, 13 Apr 2020 22:50:46 +0530</pubDate>
      
      <guid>/to-the-point/how-to-login-as-root-in-gcp-linux-vm/</guid>
      <description>In linux, root user is the most privileged user and it has access to all the commands and files. It is also known as the superuser or administrator.
By default, whenever you login in GCP Linux VM using SSH provided by GCP or using the custom SSH, it login as gcp_username user or as ssh_username respectively.
To login as the root user, first set the root password.
To set the root password, use passwd command.</description>
      
    </item>
    
    <item>
      <title>How to Create a Linux VM in GCP</title>
      <link>/to-the-point/how-to-create-a-linux-vm-in-gcp/</link>
      <pubDate>Sun, 29 Mar 2020 09:45:27 +0530</pubDate>
      
      <guid>/to-the-point/how-to-create-a-linux-vm-in-gcp/</guid>
      <description>Create a new account on GCP. For new users, GCP credits $300 dollars in the account for 12 months and with many free services.
Login to your GCP account.
Create a new virtual machine Select Compute Engine from the top left menu.
Menu &amp;gt; Compute &amp;gt; Compute Engine
Create a new project In GCP, a project is a resource manager. All the related resources of a project place inside it. Create a new project demo.</description>
      
    </item>
    
    <item>
      <title>How to create a Linux VM in Azure?</title>
      <link>/to-the-point/how-to-create-a-linux-vm-in-azure/</link>
      <pubDate>Fri, 27 Mar 2020 14:56:35 +0530</pubDate>
      
      <guid>/to-the-point/how-to-create-a-linux-vm-in-azure/</guid>
      <description>Create a new account in Microsoft Azure. For new users, Azure gives free credits for 30 days and many services free of cost upto a limit for 12 months.
For students, Microsoft also give away many resources and azure credits. You just have to reach to them by their email.
Login to your azure account.
Step 1 Search for Ubuntu 16.04 LTS In the search bar, search Ubuntu 16.04 LTS and select create.</description>
      
    </item>
    
    <item>
      <title>How to create a Linux VM in AWS?</title>
      <link>/to-the-point/how-to-create-a-linux-vm-in-aws/</link>
      <pubDate>Wed, 25 Mar 2020 09:45:45 +0530</pubDate>
      
      <guid>/to-the-point/how-to-create-a-linux-vm-in-aws/</guid>
      <description>Create a new aws account.
Login to your aws account. Select services on top left and search EC2 and select it.
EC2 Dashboard Scroll down to Launch Instance section and select Launch Instance.
Configure Instance Follow the steps to create a Ubuntu 16.04 VM.
Step 1 Choose an Amazon Machine Image (AMI) Scroll down and select **Ubuntu Server 16.04 LTS (HVM).
Step 2 Choose an Instance Type Select t2.medium and click Configure Instance Details.</description>
      
    </item>
    
    <item>
      <title>How to Read and Write a File in Golang?</title>
      <link>/to-the-point/how-to-read-and-write-a-file-in-golang/</link>
      <pubDate>Tue, 24 Mar 2020 11:13:24 +0530</pubDate>
      
      <guid>/to-the-point/how-to-read-and-write-a-file-in-golang/</guid>
      <description>In this tutorial, we will learn how to read and write files in the file system using the io/ioutil package.
Write a file using WriteFile The WriteFile function takes 3 arguments, filename, data in a byte array, and filemode.
1func WriteFile(filename string, data []byte, perm os.FileMode) error A FileMode represents a file&#39;s mode and permission bits. Learn more
1package main 2 3import ( 4 &amp;#34;io/ioutil&amp;#34; 5 &amp;#34;log&amp;#34; 6) 7 8func main() { 9 // create a byte array of a string 10 data := []byte(&amp;#34;Hello Gopher!</description>
      
    </item>
    
    <item>
      <title>Json in Golang</title>
      <link>/posts/json-in-golang/</link>
      <pubDate>Mon, 23 Mar 2020 11:23:56 +0530</pubDate>
      
      <guid>/posts/json-in-golang/</guid>
      <description>When you start a project which interacts with the outer world, it requires data exchange. To make a project successful this interaction must be simple and efficient.
What is Data Exchange?  Data exchange is the process of taking data structured under a source schema and transforming it into data structured under a target schema, so that the target data is an accurate representation of the source data. - Wikipedia</description>
      
    </item>
    
    <item>
      <title>Convert String to Int and Int to String in Golang</title>
      <link>/to-the-point/convert-string-to-int-and-int-to-string-in-golang/</link>
      <pubDate>Tue, 03 Mar 2020 08:25:25 +0530</pubDate>
      
      <guid>/to-the-point/convert-string-to-int-and-int-to-string-in-golang/</guid>
      <description>Golang standard library has provided 2 functions Atoi and Itoa to convert string to int and int to string respectively.
These 2 functions placed inside the strconv package.
 Package strconv implements conversions to and from string representations of basic data types.
 String to Int The strconv.Atoi function takes a string and returns an int and an error.
func Atoi(s string) (int, error) It will return type int and type int is system dependent.</description>
      
    </item>
    
    <item>
      <title>How to use Swapper in Golang?</title>
      <link>/to-the-point/how-to-use-swapper-in-golang/</link>
      <pubDate>Tue, 03 Mar 2020 08:17:07 +0530</pubDate>
      
      <guid>/to-the-point/how-to-use-swapper-in-golang/</guid>
      <description>Swapper is a function defined in the reflect package. This function takes a slice and returns a swap function. This swap function takes 2 indexes as arguments and swaps the values at index position in the slice.
Function Definition 1func Swapper(slice interface{}) func(i, j int) Let&#39;s try
1package main 2 3import ( 4	&amp;#34;fmt&amp;#34; 5	&amp;#34;reflect&amp;#34; 6) 7 8func main() { 9	s := []int{1, 2, 3} 10	fmt.Printf(&amp;#34;Before swap: %v\n&amp;#34;, s) 11 12	swapF := reflect.</description>
      
    </item>
    
    <item>
      <title>Understand Quicksort the easy way</title>
      <link>/posts/understand-quicksort-the-easy-way/</link>
      <pubDate>Thu, 13 Feb 2020 23:25:31 +0530</pubDate>
      
      <guid>/posts/understand-quicksort-the-easy-way/</guid>
      <description>Photo by IÃ±aki del Olmo on Unsplash
Data structures and Algorithms are the key skills for a software developer. Recently when I was preparing for a job change, learning sorting algorithms was not smooth.
The theory is simple and straight but its implementation is just the opposite.
 I think concept and implementation are inversely proportional. ðŸ¤”
 There are many sorting algorithms like bubblesort, mergesort, quicksort etc. Among all, quicksort is one of the most popular sorting algorithms.</description>
      
    </item>
    
  </channel>
</rss>
