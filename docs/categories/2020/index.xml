<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>2020 on Shubham Chadokar</title>
    <link>/categories/2020/</link>
    <description>Recent content in 2020 on Shubham Chadokar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://schadokar.dev&#34;&gt;Shubham Chadokar&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Sat, 20 Jun 2020 17:43:00 +0530</lastBuildDate>
    
        <atom:link href="/categories/2020/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create an Account in Sendinblue</title>
      <link>/to-the-point/create-an-account-in-sendinblue/</link>
      <pubDate>Sat, 20 Jun 2020 17:43:00 +0530</pubDate>
      
      <guid>/to-the-point/create-an-account-in-sendinblue/</guid>
      <description>Sendinblue is a SaaS solution for relationship marketing. It offers a cloud-based marketing communication software suite with email marketing, transactional email, marketing automation, customer-relationship management, landing pages, Facebook ads, retargeting ads, SMS marketing, and more.
Sendinblue offers 300 mails per day for free account. ðŸ˜ƒ
Getting started There are only 3 easy steps to create an account in Sendinblue.
Step 1 Click on the below Get started link. It will redirect you to the signup page.</description>
      
    </item>
    
    <item>
      <title>How to Send Email in Golang</title>
      <link>/posts/how-to-send-email-in-golang/</link>
      <pubDate>Thu, 11 Jun 2020 11:07:11 +0530</pubDate>
      
      <guid>/posts/how-to-send-email-in-golang/</guid>
      <description>This is a series of tutorials: sending email in golang. We&#39;ll first start with the basic sending an email using the go command.
In the upcoming tutorials, we will create an API and a frontend using which we will send emails.
In this tutorial, we will send an email using the main.go file.
Pre-requisites  go v1.11 or greater - I am using go1.14.3 Code Editor (VSCode, Atom) - I am using VS Code Sendinblue account - link   Check out this step by step tutorial Create an account in sendinblue.</description>
      
    </item>
    
    <item>
      <title>Create a To Do App in Reactjs with Github Pages</title>
      <link>/posts/create-a-to-do-app-in-reactjs-with-github-pages/</link>
      <pubDate>Tue, 14 Apr 2020 10:19:00 +0530</pubDate>
      
      <guid>/posts/create-a-to-do-app-in-reactjs-with-github-pages/</guid>
      <description>In this tutorial, we will create a to-do list app in reactjs. We will use browser local storage to save the tasks, which will keep the tasks even after we close the browser. In the end, we will host this application on Github pages.
Pre-requisites  Nodejs Code editor (I am using VS Code) Github Account   React Application We are going to use create-react-app as our base application.</description>
      
    </item>
    
    <item>
      <title>How to Use Json in Golang?</title>
      <link>/posts/how-to-use-json-in-golang/</link>
      <pubDate>Mon, 23 Mar 2020 11:23:56 +0530</pubDate>
      
      <guid>/posts/how-to-use-json-in-golang/</guid>
      <description>When you start a project which interacts with the outer world, it requires data exchange. To make a project successful this interaction must be simple and efficient.
What is Data Exchange?  Data exchange is the process of taking data structured under a source schema and transforming it into data structured under a target schema, so that the target data is an accurate representation of the source data. - Wikipedia</description>
      
    </item>
    
    <item>
      <title>Use Environment Variable in your next Golang Project</title>
      <link>/posts/use-environment-variable-in-your-next-golang-project/</link>
      <pubDate>Sun, 12 Jan 2020 18:14:49 +0530</pubDate>
      
      <guid>/posts/use-environment-variable-in-your-next-golang-project/</guid>
      <description>Photo by Moja Msanii on Unsplash When it comes to creating a production-grade application, using the environment variable in the application is de facto.
Why should we use the environment variable? Suppose you have an application with many features and each feature need to access the Database. You configured all the DB information like DBURL, DBNAME, USERNAME and PASSWORD in each feature.
There are a few major disadvantages to this approach, there can be many.</description>
      
    </item>
    
    <item>
      <title>Create your own Etherscan with React in 5 minutes</title>
      <link>/posts/create-your-own-etherscan-with-react-in-5-minutes/</link>
      <pubDate>Tue, 07 Jan 2020 21:23:34 +0530</pubDate>
      
      <guid>/posts/create-your-own-etherscan-with-react-in-5-minutes/</guid>
      <description>Photo by Radek Grzybowski on Unsplash In this tutorial, we&#39;ll create a simple single-page etherscan in reactjs. For the clean UI, we are going to use the amazing semantic-ui-react which is the official react integration for semantic-ui.
 You can find the complete code in the github.
 Without wasting any time let&#39;s build it.
 Prerequisite   nodejs
  Code editor &amp;ndash; (I am using VS Code)</description>
      
    </item>
    
  </channel>
</rss>
